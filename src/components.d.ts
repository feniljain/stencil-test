/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ConnectedEvent } from "./core/entities/connectedEvent";
export namespace Components {
    interface CompConsumer {
        "childOverride": boolean;
    }
    interface CompProvider {
    }
    interface ComponentConsumer {
    }
    interface ComponentProvider {
        "first": string;
    }
    interface DyteMeeting {
        "height": number;
        "language": string;
        "width": number;
    }
    interface DyteParticipant {
        "childOverride": boolean;
        "dataId": boolean;
    }
    interface DyteParticipantVideo {
        "childOverride": boolean;
        "height": number;
        "width": number;
    }
    interface DyteParticipantVideoDisabled {
        "childOverride": boolean;
    }
}
declare global {
    interface HTMLCompConsumerElement extends Components.CompConsumer, HTMLStencilElement {
    }
    var HTMLCompConsumerElement: {
        prototype: HTMLCompConsumerElement;
        new (): HTMLCompConsumerElement;
    };
    interface HTMLCompProviderElement extends Components.CompProvider, HTMLStencilElement {
    }
    var HTMLCompProviderElement: {
        prototype: HTMLCompProviderElement;
        new (): HTMLCompProviderElement;
    };
    interface HTMLComponentConsumerElement extends Components.ComponentConsumer, HTMLStencilElement {
    }
    var HTMLComponentConsumerElement: {
        prototype: HTMLComponentConsumerElement;
        new (): HTMLComponentConsumerElement;
    };
    interface HTMLComponentProviderElement extends Components.ComponentProvider, HTMLStencilElement {
    }
    var HTMLComponentProviderElement: {
        prototype: HTMLComponentProviderElement;
        new (): HTMLComponentProviderElement;
    };
    interface HTMLDyteMeetingElement extends Components.DyteMeeting, HTMLStencilElement {
    }
    var HTMLDyteMeetingElement: {
        prototype: HTMLDyteMeetingElement;
        new (): HTMLDyteMeetingElement;
    };
    interface HTMLDyteParticipantElement extends Components.DyteParticipant, HTMLStencilElement {
    }
    var HTMLDyteParticipantElement: {
        prototype: HTMLDyteParticipantElement;
        new (): HTMLDyteParticipantElement;
    };
    interface HTMLDyteParticipantVideoElement extends Components.DyteParticipantVideo, HTMLStencilElement {
    }
    var HTMLDyteParticipantVideoElement: {
        prototype: HTMLDyteParticipantVideoElement;
        new (): HTMLDyteParticipantVideoElement;
    };
    interface HTMLDyteParticipantVideoDisabledElement extends Components.DyteParticipantVideoDisabled, HTMLStencilElement {
    }
    var HTMLDyteParticipantVideoDisabledElement: {
        prototype: HTMLDyteParticipantVideoDisabledElement;
        new (): HTMLDyteParticipantVideoDisabledElement;
    };
    interface HTMLElementTagNameMap {
        "comp-consumer": HTMLCompConsumerElement;
        "comp-provider": HTMLCompProviderElement;
        "component-consumer": HTMLComponentConsumerElement;
        "component-provider": HTMLComponentProviderElement;
        "dyte-meeting": HTMLDyteMeetingElement;
        "dyte-participant": HTMLDyteParticipantElement;
        "dyte-participant-video": HTMLDyteParticipantVideoElement;
        "dyte-participant-video-disabled": HTMLDyteParticipantVideoDisabledElement;
    }
}
declare namespace LocalJSX {
    interface CompConsumer {
        "childOverride"?: boolean;
        "onCompConsumerConnected"?: (event: CustomEvent<ConnectedEvent>) => void;
    }
    interface CompProvider {
    }
    interface ComponentConsumer {
    }
    interface ComponentProvider {
        "first"?: string;
    }
    interface DyteMeeting {
        "height"?: number;
        "language"?: string;
        "width"?: number;
    }
    interface DyteParticipant {
        "childOverride"?: boolean;
        "dataId"?: boolean;
        "onDyteParticipantConnected"?: (event: CustomEvent<ConnectedEvent>) => void;
    }
    interface DyteParticipantVideo {
        "childOverride"?: boolean;
        "height"?: number;
        "onDyteParticipantVideoConnected"?: (event: CustomEvent<ConnectedEvent>) => void;
        "width"?: number;
    }
    interface DyteParticipantVideoDisabled {
        "childOverride"?: boolean;
        "onDyteParticipantVideoDisabledConnected"?: (event: CustomEvent<ConnectedEvent>) => void;
    }
    interface IntrinsicElements {
        "comp-consumer": CompConsumer;
        "comp-provider": CompProvider;
        "component-consumer": ComponentConsumer;
        "component-provider": ComponentProvider;
        "dyte-meeting": DyteMeeting;
        "dyte-participant": DyteParticipant;
        "dyte-participant-video": DyteParticipantVideo;
        "dyte-participant-video-disabled": DyteParticipantVideoDisabled;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "comp-consumer": LocalJSX.CompConsumer & JSXBase.HTMLAttributes<HTMLCompConsumerElement>;
            "comp-provider": LocalJSX.CompProvider & JSXBase.HTMLAttributes<HTMLCompProviderElement>;
            "component-consumer": LocalJSX.ComponentConsumer & JSXBase.HTMLAttributes<HTMLComponentConsumerElement>;
            "component-provider": LocalJSX.ComponentProvider & JSXBase.HTMLAttributes<HTMLComponentProviderElement>;
            "dyte-meeting": LocalJSX.DyteMeeting & JSXBase.HTMLAttributes<HTMLDyteMeetingElement>;
            "dyte-participant": LocalJSX.DyteParticipant & JSXBase.HTMLAttributes<HTMLDyteParticipantElement>;
            "dyte-participant-video": LocalJSX.DyteParticipantVideo & JSXBase.HTMLAttributes<HTMLDyteParticipantVideoElement>;
            "dyte-participant-video-disabled": LocalJSX.DyteParticipantVideoDisabled & JSXBase.HTMLAttributes<HTMLDyteParticipantVideoDisabledElement>;
        }
    }
}
